any         ::= text | tabstop | placeholder | choice | variable | function |
                expansion
tabstop     ::= '$' int | '${' int '}' | '$' modifier | '${' modifier '}'
placeholder ::= '${' int ':' any '}' | '${' modifier ':' any '}'
choice      ::= '${' int '|' text | expansion (',' text | expansion)* '|}'
                | '${' modifier '|' text | expansion (',' text | expansion)* '|}'
variable    ::= '$' var | '${' var }'
                | '${' var ':' any '}'
                | '${' var '/' regex '/' (format | text)+ '/' options '}'
function    ::= '${#' identifier ':' text (':' text)* '}'
expansion   ::= '${!' reference ':' any (':' any)* '}'
format      ::= '$' int | '${' int '}'
                | '${' int ':' '/upcase' | '/downcase' | '/capitalize' '}'
                | '${' int ':+' if '}'
                | '${' int ':?' if ':' else '}'
                | '${' int ':-' else '}' | '${' int ':' else '}'
modifier    ::= anchor | incrementor
regex       ::= JavaScript Regular Expression value (ctor-string)
options     ::= JavaScript Regular Expression option (ctor-options)
anchor      ::= '=' int
incrementor ::= '+'
identifier  ::= [_a-zA-Z] [_-a-zA-Z]*
reference   ::= [_a-zA-Z] [_- a-zA-Z0-9]*
var         ::= [_a-zA-Z] [_a-zA-Z0-9]*
int         ::= [0-9]+
text        ::= .*
